{"ast":null,"code":"var _jsxFileName = \"/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Conversion/BinToDecCon.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport Notification from '../Notification';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport desimaalijarjestelma from '../../desimaali.png';\nimport binaarijarjestelma from '../../binaarijarjestelma.png';\nimport binaarilukutaulukko from '../../binaarilukutaulukko.png';\n\nconst BinToDecCon = () => {\n  const [binary, setBinary] = useState('1010');\n  const [decimal, setDecimal] = useState('');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    handleChange(binary);\n    document.title = 'Binääri-desimaalilukumuunnin - Laske & Muunna';\n  });\n\n  const handleChange = value => {\n    setBinary(value);\n\n    if (validateBinary(value)) {\n      setDecimal(convertBinToDec(value));\n\n      if (value.length > 0) {\n        setMessage(`${binary} on desimaalilukuna ${decimal}`);\n        setErrorMessage('');\n      } else {\n        setMessage('');\n        setErrorMessage('');\n      }\n    } else {\n      setErrorMessage('Virheellinen binääriluku. Syötä ainoastaan numeroita 0 tai 1.');\n      setMessage('');\n    }\n  };\n\n  const validateBinary = bin => {\n    for (let i = 0; i < bin.length; i++) {\n      if (bin.charAt(i) !== '0' && bin.charAt(i) !== '1' && bin.charAt(i) !== ' ') {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const convertBinToDec = bin => {\n    const convertedDecimal = parseInt((bin + '').replace(/[^01]/gi, ''), 2);\n    return convertedDecimal;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(LinkContainer, {\n    to: \"../\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Alkuun\")), React.createElement(LinkContainer, {\n    to: \"./\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Yksikk\\xF6muuntimet\")), React.createElement(Breadcrumb.Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Bin\\xE4\\xE4ri-desimaalilukumuunnin\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      maxWidth: '90%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Bin\\xE4\\xE4ri-desimaalilukumuunnin\")), React.createElement(\"div\", {\n    className: \"calculator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"T\\xE4ll\\xE4 muuntimella voit muuntaa bin\\xE4\\xE4riluvun niin sanotuksi normaaliksi luvuksi eli desimaaliluvuksi.\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Sy\\xF6t\\xE4 bin\\xE4\\xE4riluku:\"), \" \", React.createElement(\"input\", {\n    value: binary,\n    onChange: ({\n      target\n    }) => handleChange(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))), React.createElement(Notification, {\n    message: message,\n    result: decimal,\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Katso my\\xF6s \", React.createElement(Link, {\n    to: \"./desimaali-binaari-muunnin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"desimaali-bin\\xE4\\xE4rilukumuunnin\"), \".\")))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Desimaalij\\xE4rjestelm\\xE4\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Normaalisti k\\xE4yt\\xE4mme arkiel\\xE4m\\xE4ss\\xE4 normaalia 10-numeroista lukuj\\xE4rjestelm\\xE4\\xE4 (luvut 0-9), eli desimaalij\\xE4rjestelm\\xE4\\xE4.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), \" Numeron paikka luvussa on merkitsev\\xE4 ja kullakin numerolla on erilainen painoarvo sen mukaan, mik\\xE4 on numeron sijainti luvussa. Numeroiden painoarvot kasvavat oikealta vasemmalle: 1, 10, 100, 1000, 10000... \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), \"10 numeroj\\xE4rjestelm\\xE4ss\\xE4 kantaluku on 10 ja numeroiden painoarvot saadaan kantaluvun potensseista: \", React.createElement(\"var\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"1=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"0\"), \", 10=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"1\"), \", 100=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"2\"), \", 1 000=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"3\"), \", 10 000=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"4\"))), React.createElement(\"img\", {\n    src: desimaalijarjestelma,\n    alt: \"Desimaaliluku\",\n    style: {\n      maxWidth: '80%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Bin\\xE4\\xE4rij\\xE4rjestelm\\xE4\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Bin\\xE4\\xE4rij\\xE4rjestelm\\xE4 on teknisesti yksinkertaisin lukuj\\xE4rjestelm\\xE4. Bin\\xE4\\xE4rij\\xE4rjestelm\\xE4 on kaksij\\xE4rjestelm\\xE4, jossa tarvitaan vain kahta numeroa: 0 ja 1.\", React.createElement(\"img\", {\n    src: binaarilukutaulukko,\n    alt: \"Bin\\xE4\\xE4rilukutaulukko\",\n    style: {\n      maxWidth: '100%',\n      float: 'right',\n      margin: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), \"Tietokoneiden on vaikeaa k\\xE4ytt\\xE4\\xE4 10-numeroj\\xE4rjestelm\\xE4\\xE4 merkkim\\xE4\\xE4r\\xE4n vuoksi, joten tietokoneiden toiminta perustuukin yksinkertaisempaan bin\\xE4\\xE4rij\\xE4rjestelm\\xE4\\xE4n. Bin\\xE4\\xE4riluvuilla on helppo esitt\\xE4\\xE4 erilaisia ilmi\\xF6it\\xE4, kuten: s\\xE4hk\\xF6 kulkee / ei kulje, ovi on auki / kiinni, toimii / ei toimi ja niin edelleen.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), \"Bin\\xE4\\xE4rilukuj\\xE4rjestelm\\xE4ss\\xE4 lukujen painoarvot saadaan kantaluvun (2) potensseina, samalla tavalla kuin 10-j\\xE4rjestelm\\xE4ss\\xE4.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"var\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"1=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"0\"), \", 2=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"1\"), \", 4=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"2\"), \", 8=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"3\"), \", 16=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"4\"), \", 32=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"5\"), \", 64=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"6\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), \"Lukujen painoarvot kasvaa oikealta vasemmalle: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512 jne.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), \"Yll\\xE4 luetellut luvut saattaa n\\xE4ytt\\xE4\\xE4 hyvin tutuilta, koska ne tulevat jatkuvasti vastaan tietotekniikassa.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), \"Bin\\xE4\\xE4riluku saadaan kerrottua helposti kahdella lis\\xE4\\xE4m\\xE4ll\\xE4 0 luvun per\\xE4\\xE4n, eli esimerkiksi 1010B on desimaalilukuna 10 ja 10100B on desimaalilukuna 20.\", React.createElement(\"img\", {\n    src: binaarijarjestelma,\n    alt: \"Bin\\xE4\\xE4rilukuj\\xE4rjestelm\\xE4\",\n    style: {\n      maxWidth: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })));\n};\n\nexport default BinToDecCon;","map":{"version":3,"sources":["/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Conversion/BinToDecCon.js"],"names":["React","useState","useEffect","Breadcrumb","Link","Notification","LinkContainer","desimaalijarjestelma","binaarijarjestelma","binaarilukutaulukko","BinToDecCon","binary","setBinary","decimal","setDecimal","message","setMessage","errorMessage","setErrorMessage","handleChange","document","title","value","validateBinary","convertBinToDec","length","bin","i","charAt","convertedDecimal","parseInt","replace","maxWidth","target","float","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Breadcrumb } from 'react-bootstrap'\nimport { Link } from \"react-router-dom\"\nimport Notification from '../Notification'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport desimaalijarjestelma from '../../desimaali.png'\nimport binaarijarjestelma from '../../binaarijarjestelma.png'\nimport binaarilukutaulukko from '../../binaarilukutaulukko.png'\n\nconst BinToDecCon = () => {\n    const [binary, setBinary] = useState('1010')\n    const [decimal, setDecimal] = useState('')\n    const [message, setMessage] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        handleChange(binary)\n        document.title = 'Binääri-desimaalilukumuunnin - Laske & Muunna'\n    })\n\n    const handleChange = (value) => {\n        setBinary(value)\n        if (validateBinary(value)) {\n            setDecimal(convertBinToDec(value))\n            if (value.length > 0) {\n                setMessage(`${binary} on desimaalilukuna ${decimal}`)\n                setErrorMessage('')\n            } else {\n                setMessage('')\n                setErrorMessage('')\n            }\n        } else {\n            setErrorMessage('Virheellinen binääriluku. Syötä ainoastaan numeroita 0 tai 1.')\n            setMessage('')\n        }\n    }\n\n    const validateBinary = (bin) => {\n        for (let i = 0; i < bin.length; i++) {\n            if (bin.charAt(i) !== '0' && bin.charAt(i) !== '1' && bin.charAt(i) !== ' ') {\n                return false\n            }\n        }\n        return true\n    }\n\n    const convertBinToDec = (bin) => {\n        const convertedDecimal = parseInt((bin + '').replace(/[^01]/gi, ''), 2)\n        return convertedDecimal\n    }\n\n    return (\n        <div>\n            <Breadcrumb>\n                <LinkContainer to=\"../\">\n                    <Breadcrumb.Item>\n                        Alkuun\n                </Breadcrumb.Item>\n                </LinkContainer>\n                <LinkContainer to=\"./\">\n                    <Breadcrumb.Item>\n                        Yksikkömuuntimet\n                </Breadcrumb.Item>\n                </LinkContainer>\n                <Breadcrumb.Item active>\n                    Binääri-desimaalilukumuunnin\n                </Breadcrumb.Item>\n            </Breadcrumb>\n            <div>\n                <div style={{ maxWidth: '90%' }}>\n                    <h2>\n                        Binääri-desimaalilukumuunnin\n            </h2>\n                </div>\n                <div className='calculator'>\n                    <p>Tällä muuntimella voit muuntaa binääriluvun niin sanotuksi normaaliksi luvuksi eli desimaaliluvuksi.</p>\n                    <div>\n                        <form>\n                            <p>\n                                <b>Syötä binääriluku:</b> <input value={binary} onChange={({ target }) => handleChange(target.value)}>\n                                </input>\n                            </p>\n                        </form>\n                        <Notification message={message} result={decimal} errorMessage={errorMessage} />\n                        <p>Katso myös <Link to=\"./desimaali-binaari-muunnin\">desimaali-binäärilukumuunnin</Link>.</p>\n                    </div>\n                </div>\n            </div>\n            <hr />\n            <h4>Desimaalijärjestelmä</h4>\n            <p>Normaalisti käytämme arkielämässä normaalia 10-numeroista lukujärjestelmää (luvut 0-9), eli desimaalijärjestelmää.<br /> Numeron paikka luvussa on merkitsevä ja kullakin numerolla on erilainen painoarvo sen mukaan, mikä on numeron sijainti\n            luvussa. Numeroiden painoarvot kasvavat oikealta vasemmalle: 1, 10, 100, 1000, 10000... <br />10 numerojärjestelmässä kantaluku on 10 ja numeroiden painoarvot saadaan kantaluvun potensseista: <var>1=10<sup>0</sup>, 10=10<sup>1</sup>, 100=10<sup>2</sup>, 1 000=10<sup>3</sup>, 10 000=10<sup>4</sup></var></p>\n            <img src={desimaalijarjestelma} alt='Desimaaliluku' style={{ maxWidth: '80%' }} />\n            <h4>Binäärijärjestelmä</h4>\n            <p>\n                Binäärijärjestelmä on teknisesti yksinkertaisin lukujärjestelmä. Binäärijärjestelmä on kaksijärjestelmä, jossa tarvitaan vain kahta numeroa: 0 ja 1.\n            <img src={binaarilukutaulukko} alt='Binäärilukutaulukko' style={{ maxWidth: '100%', float: 'right', margin: '20px' }} />\n                <br />\n            Tietokoneiden on vaikeaa käyttää 10-numerojärjestelmää merkkimäärän vuoksi, joten tietokoneiden toiminta perustuukin yksinkertaisempaan binäärijärjestelmään. Binääriluvuilla on helppo esittää erilaisia ilmiöitä, kuten: sähkö kulkee / ei kulje, ovi on auki / kiinni, toimii / ei toimi ja niin edelleen.\n            <br />\n            Binäärilukujärjestelmässä lukujen painoarvot saadaan kantaluvun (2) potensseina, samalla tavalla kuin 10-järjestelmässä.<br />\n                <var>1=2<sup>0</sup>, 2=2<sup>1</sup>, 4=2<sup>2</sup>, 8=2<sup>3</sup>, 16=2<sup>4</sup>, 32=2<sup>5</sup>, 64=2<sup>6</sup></var><br />\n            Lukujen painoarvot kasvaa oikealta vasemmalle: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512 jne.<br />\n            Yllä luetellut luvut saattaa näyttää hyvin tutuilta, koska ne tulevat jatkuvasti vastaan tietotekniikassa.\n            <br />\n            Binääriluku saadaan kerrottua helposti kahdella lisäämällä 0 luvun perään, eli esimerkiksi 1010B on desimaalilukuna 10 ja 10100B on desimaalilukuna 20.\n            <img src={binaarijarjestelma} alt='Binäärilukujärjestelmä' style={{ maxWidth: '100%' }} />\n                <br />\n            </p>\n        </div>\n    )\n}\n\nexport default BinToDecCon"]},"metadata":{},"sourceType":"module"}