{"ast":null,"code":"var _jsxFileName = \"/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Conversion/DecToHexCon.js\";\nimport React, { useState, useEffect } from 'react';\nimport Notification from '../Notification';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ConversionTable from './ConverisionTable';\n\nconst DecToHexCon = () => {\n  const [decimal, setDecimal] = useState('10');\n  const [hex, setHex] = useState('A');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    handleChange(decimal);\n    document.title = 'Desimaali-heksadesimaali muunnin - Laske & Muunna';\n  });\n\n  const handleChange = value => {\n    setDecimal(value);\n    setHex(convertDectoHex(decimal).toUpperCase());\n\n    if (isNaN(value)) {\n      setErrorMessage('SyÃ¶tetty luku ei ole numero');\n      setMessage('');\n    } else if (value.length !== 0) {\n      setErrorMessage('');\n      setMessage(`${decimal} on heksalukuna ${hex}`);\n    } else {\n      setMessage('');\n      setErrorMessage('');\n    }\n  };\n\n  const convertDectoHex = dec => {\n    if (dec < 0) {\n      dec = 0xFFFFFFFF + dec + 1;\n    }\n\n    return parseInt(dec, 10).toString(16);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(LinkContainer, {\n    to: \"../\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Alkuun\")), React.createElement(LinkContainer, {\n    to: \"./\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Yksikk\\xF6muuntimet\")), React.createElement(Breadcrumb.Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Desimaali-heksadesimaalimuunnin\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      maxWidth: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Desimaali-heksadesimaalimuunnin\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Heksadesimaalimuunnin on muunnin jolla voit muuttaa \\\"normaalin\\\" desimaaliluvun heksadesimaaliluvuksi.\"), React.createElement(\"div\", {\n    className: \"calculator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Voit muuttaa t\\xE4ll\\xE4 heksadesimaalimuuntimella numeron heksaluvuksi. Sy\\xF6t\\xE4 alle muunnettava luku, niin n\\xE4et muunnetun heksadesimaaliluvun.\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Sy\\xF6t\\xE4 luku: \", React.createElement(\"input\", {\n    value: decimal,\n    onChange: ({\n      target\n    }) => handleChange(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))), React.createElement(Notification, {\n    message: message,\n    result: hex,\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }))), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Heksalukuj\\xE4rjestelm\\xE4\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Heksaj\\xE4rjestelm\\xE4ss\\xE4 kantalukuna on numero 16, joten j\\xE4rjestelm\\xE4ss\\xE4 tarvitaan 16 eri numeromerkki\\xE4: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\"), React.createElement(ConversionTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), \"Heksaj\\xE4rjestelm\\xE4n kantaluku on suoraan numero 2:n potenssi eli \", React.createElement(\"var\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"16=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"4\")), \".\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), \"Heksalukuja k\\xE4ytet\\xE4\\xE4n yleisesti tietotekniikassa, koska yksi heksaj\\xE4rjestelm\\xE4n numero voidaan esitt\\xE4\\xE4 4-bittisell\\xE4 bin\\xE4\\xE4riluvulla, ja 4-bittisell\\xE4 bin\\xE4\\xE4riluvulla voi olla 16 erilaista tilaa, eli yksi 4-bittinen bin\\xE4\\xE4riluku vastaa yht\\xE4 heksaj\\xE4rjestelm\\xE4n numeroa.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), \"N\\xE4in esimerkiksi 8-bittisen tavun arvo voidaan ilmaista kahden merkin pituisella heksadesimaaliluvulla. Heksaj\\xE4rjestelm\\xE4\\xE4 voidaankin pit\\xE4\\xE4 lyhennysmerkint\\xE4n\\xE4 binaarij\\xE4rjestelm\\xE4n luvuille.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \"Heksaluvut merkit\\xE4\\xE4n lis\\xE4\\xE4m\\xE4ll\\xE4 heksaluvun per\\xE4\\xE4n tunnus H eli esimerkiksi luku 16 on heksalukuna 10H.\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Ohjelmoinnissa heksadesimaaliluvut merkit\\xE4\\xE4n ohjelmointikielest\\xE4 riippuen eri tavalla. Heksadesimaaliluvut erotetaan desimaaliluvuista muun muassa seuraavin tavoin:\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\\\xAB\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"0xCD (esimerkiksi C johdannaisineen)\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"xEF\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"$1A\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"BC$\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"&HDE\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"16h\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"x'40'\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"'00'x\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"#F3\")), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Desimaaliluvun muuttaminen heksadesimaaliluvuksi\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Alla olevassa listassa lukuj\\xE4rjestelm\\xE4 on ilmoitettu numeron alaindeksill\\xE4.\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"12\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"10\"), \" = C\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"16\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"18\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"10\"), \" = 12\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"16\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"30\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"10\"), \" = 1E\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"16\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"140\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"10\"), \" = 8C\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"16\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"289\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"10\"), \" = 121\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"16\"))), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Heksaluvun muuttaminen desimaaliluvuksi\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"E\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"16\"), \" = (14 * 16\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"0\"), \") = 14\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"51\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"16\"), \" = (5 * 16\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"1\"), \") + (1 * 16\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"0\"), \") = 81\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"1AD\", React.createElement(\"sub\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"16\"), \" = (1 * 16\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"2\"), \") + (10 * 16\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"1\"), \") + (13 * 16\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"0\"), \") = 429\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Katso my\\xF6s: \", React.createElement(Link, {\n    to: \"./desimaali-binaari-muunnin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"desimaali-bin\\xE4\\xE4rilukumuunnin\"), \" ja \", React.createElement(Link, {\n    to: \"./desimaali-oktaaliluku-muunnin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"desimaali-oktaalilukumuunnin\")));\n};\n\nexport default DecToHexCon;","map":{"version":3,"sources":["/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Conversion/DecToHexCon.js"],"names":["React","useState","useEffect","Notification","Breadcrumb","LinkContainer","Link","ConversionTable","DecToHexCon","decimal","setDecimal","hex","setHex","message","setMessage","errorMessage","setErrorMessage","handleChange","document","title","value","convertDectoHex","toUpperCase","isNaN","length","dec","parseInt","toString","maxWidth","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Notification from '../Notification'\nimport { Breadcrumb } from 'react-bootstrap'\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport ConversionTable from './ConverisionTable'\n\nconst DecToHexCon = () => {\n    const [decimal, setDecimal] = useState('10')\n    const [hex, setHex] = useState('A')\n    const [message, setMessage] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        handleChange(decimal)\n        document.title = 'Desimaali-heksadesimaali muunnin - Laske & Muunna'\n    })\n\n    const handleChange = (value) => {\n        setDecimal(value)\n        setHex(convertDectoHex(decimal).toUpperCase())\n        if (isNaN(value)) {\n            setErrorMessage('SyÃ¶tetty luku ei ole numero')\n            setMessage('')\n        } else if (value.length !== 0) {\n            setErrorMessage('')\n            setMessage(`${decimal} on heksalukuna ${hex}`)\n        } else {\n            setMessage('')\n            setErrorMessage('')\n        }\n    }\n\n    const convertDectoHex = (dec) => {\n        if (dec < 0) {\n            dec = 0xFFFFFFFF + dec + 1\n        }\n        return parseInt(dec, 10).toString(16);\n    }\n\n    return (\n        <div>\n            <Breadcrumb>\n                <LinkContainer to=\"../\">\n                    <Breadcrumb.Item>\n                        Alkuun\n                </Breadcrumb.Item>\n                </LinkContainer>\n                <LinkContainer to=\"./\">\n                    <Breadcrumb.Item>\n                        YksikkÃ¶muuntimet\n                </Breadcrumb.Item>\n                </LinkContainer>\n                <Breadcrumb.Item active>\n                    Desimaali-heksadesimaalimuunnin\n                </Breadcrumb.Item>\n            </Breadcrumb>\n            <div>\n                <h2 style={{ maxWidth: '100%' }}>\n                    Desimaali-heksadesimaalimuunnin\n            </h2>\n                <p>\n                    Heksadesimaalimuunnin on muunnin jolla voit muuttaa \"normaalin\" desimaaliluvun heksadesimaaliluvuksi.\n            </p>\n                <div className=\"calculator\">\n                    <p>\n                        Voit muuttaa tÃ¤llÃ¤ heksadesimaalimuuntimella numeron heksaluvuksi. SyÃ¶tÃ¤ alle muunnettava luku, niin nÃ¤et muunnetun heksadesimaaliluvun.\n                </p>\n                    <form>\n                        <p>\n                            SyÃ¶tÃ¤ luku: <input value={decimal} onChange={({ target }) => handleChange(target.value)}>\n                            </input>\n                        </p>\n                    </form>\n                    <Notification message={message} result={hex} errorMessage={errorMessage} />\n                </div>\n            </div>\n            <h4>HeksalukujÃ¤rjestelmÃ¤</h4>\n            <p>HeksajÃ¤rjestelmÃ¤ssÃ¤ kantalukuna on numero 16, joten jÃ¤rjestelmÃ¤ssÃ¤ tarvitaan 16 eri numeromerkkiÃ¤: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n            </p>\n            <ConversionTable />\n            <p>\n                <br />\n            HeksajÃ¤rjestelmÃ¤n kantaluku on suoraan numero 2:n potenssi eli <var>16=2<sup>4</sup></var>.\n            <br />\n            Heksalukuja kÃ¤ytetÃ¤Ã¤n yleisesti tietotekniikassa, koska yksi heksajÃ¤rjestelmÃ¤n numero voidaan esittÃ¤Ã¤ 4-bittisellÃ¤ binÃ¤Ã¤riluvulla, ja 4-bittisellÃ¤ binÃ¤Ã¤riluvulla voi olla 16 erilaista tilaa, eli yksi 4-bittinen binÃ¤Ã¤riluku vastaa yhtÃ¤ heksajÃ¤rjestelmÃ¤n numeroa.\n            <br />\n            NÃ¤in esimerkiksi 8-bittisen tavun arvo voidaan ilmaista kahden merkin pituisella heksadesimaaliluvulla.\n            HeksajÃ¤rjestelmÃ¤Ã¤ voidaankin pitÃ¤Ã¤ lyhennysmerkintÃ¤nÃ¤ binaarijÃ¤rjestelmÃ¤n luvuille.<br />\n            Heksaluvut merkitÃ¤Ã¤n lisÃ¤Ã¤mÃ¤llÃ¤ heksaluvun perÃ¤Ã¤n tunnus H eli esimerkiksi luku 16 on heksalukuna 10H.\n            </p>\n            <p>\n                Ohjelmoinnissa heksadesimaaliluvut merkitÃ¤Ã¤n ohjelmointikielestÃ¤ riippuen eri tavalla.\n                Heksadesimaaliluvut erotetaan desimaaliluvuista muun muassa seuraavin tavoin:\n            </p>\n            <ul>\n                <li>\\xAB</li>\n                <li>0xCD (esimerkiksi C johdannaisineen)</li>\n                <li>xEF</li>\n                <li>$1A</li>\n                <li>BC$</li>\n                <li>&amp;HDE</li>\n                <li>16h</li>\n                <li>x'40'</li>\n                <li>'00'x</li>\n                <li>#F3</li>\n            </ul>\n            <h4>Desimaaliluvun muuttaminen heksadesimaaliluvuksi</h4>\n            <p>\n                Alla olevassa listassa lukujÃ¤rjestelmÃ¤ on ilmoitettu numeron alaindeksillÃ¤.\n            </p>\n                <ul>\n                    <li>12<sub>10</sub> = C<sub>16</sub></li>\n                    <li>18<sub>10</sub> = 12<sub>16</sub></li>\n                    <li>30<sub>10</sub> = 1E<sub>16</sub></li>\n                    <li>140<sub>10</sub> = 8C<sub>16</sub></li>\n                    <li>289<sub>10</sub> = 121<sub>16</sub></li>\n                </ul>\n                <h4>Heksaluvun muuttaminen desimaaliluvuksi</h4>\n                <ul>\n                    <li>E<sub>16</sub> = (14 * 16<sup>0</sup>) = 14</li>\n                    <li>51<sub>16</sub> = (5 * 16<sup>1</sup>) + (1 * 16<sup>0</sup>) = 81</li>\n                    <li>1AD<sub>16</sub> = (1 * 16<sup>2</sup>) + (10 * 16<sup>1</sup>) + (13 * 16<sup>0</sup>) = 429</li>\n                </ul>\n            <p>\n                Katso myÃ¶s: <Link to=\"./desimaali-binaari-muunnin\">desimaali-binÃ¤Ã¤rilukumuunnin</Link> ja <Link to=\"./desimaali-oktaaliluku-muunnin\">desimaali-oktaalilukumuunnin</Link>\n            </p>\n        </div>\n    )\n}\nexport default DecToHexCon"]},"metadata":{},"sourceType":"module"}