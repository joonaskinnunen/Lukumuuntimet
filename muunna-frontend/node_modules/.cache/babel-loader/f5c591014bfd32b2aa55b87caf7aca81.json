{"ast":null,"code":"import _objectSpread from\"/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Notification from'../Notification';import{Breadcrumb,Table,Form,Col,InputGroup}from'react-bootstrap';import{LinkContainer}from\"react-router-bootstrap\";import axios from'axios';var ExchangeRates=function ExchangeRates(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),exchangeRates=_useState2[0],setExchangeRates=_useState2[1];var _useState3=useState('2020-05-11'),_useState4=_slicedToArray(_useState3,2),lastUpdated=_useState4[0],setLastUpdated=_useState4[1];var _useState5=useState({firstNum:{inputValue:'0',currency:'0'},secondNum:{inputValue:'0',currency:'0'}}),_useState6=_slicedToArray(_useState5,2),selectedCurrencies=_useState6[0],setSelectedCurrencies=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),errorMessage=_useState10[0],setErrorMessage=_useState10[1];var getCurrencyFromCode=function getCurrencyFromCode(currency){switch(currency){case'CAD':return'Kanadan dollari';case'JPY':return'Japanin jeni';case'BGN':return'Bulgarian leva';case'CZK':return'Tšekin koruna';case'DKK':return'Tanskan kruunu';case'GBP':return'Englannin punta';case'HUF':return'Unkarin forintti';case'PLN':return'Puolan zloty';case'RON':return'Romanian leu';case'SEK':return'Ruotsin kruunu';case'CHF':return'Sveitsin frangi';case'NOK':return'Norjan kruunu';case'HRK':return'Kroatian kuna';case'RUB':return'Venäjän rupla';case'TRY':return'Turkin liira';case'AUD':return'Australian dollari';case'BRL':return'Brasilian real';case'CNY':return'Kiinan juan / renminbi';case'HKD':return'Hongkongin dollari';case'IDR':return'Indonesian rupia';case'ILS':return'Israelin sekeli';case'INR':return'Intian rupia';case'KRW':return'Etelä-Korean won';case'MYR':return'Malesian ringgit';case'NZD':return'Uuden-Seelannin dollari';case'PHP':return'Filippiinien peso';case'SGD':return'Singaporen dollari';case'THB':return'Thaimaan baht';case'ZAR':return'Etelä-Afrikan randi';case'USD':return'Yhdysvaltain dollari';case'ISK':return'Islannin kruunu';case'MXN':return'Meksikon peso';default:return'Valuutan nimi';}};useEffect(function(){document.title='Valuuttalaskuri / valuuttamuunnin - Laske & Muunna';axios.get('https://api.exchangeratesapi.io/latest').then(function(response){var lastUpdated=response.data.date.split('-').reverse().join('.');setLastUpdated(lastUpdated);var arr=Object.entries(response.data.rates);for(var i=0;i<arr.length;i++){arr[i].push(getCurrencyFromCode(arr[i][0]));}arr.push([\"EUR\",1,\"Euro\"]);arr.sort(function(a,b){return a[2].localeCompare(b[2]);});setExchangeRates(arr);});},[]);var handleFirstNumChange=function handleFirstNumChange(value){value=value.replace(/,/g,'.');if(isNaN(value)){setErrorMessage('Syötetty luku ei ole numero');}else if(value!==0){var factor=exchangeRates[selectedCurrencies.secondNum.currency][1]/exchangeRates[selectedCurrencies.firstNum.currency][1];setSelectedCurrencies({secondNum:_objectSpread({},selectedCurrencies.secondNum,{inputValue:value*factor}),firstNum:_objectSpread({},selectedCurrencies.firstNum,{inputValue:value})});value.length>0?setMessage(\"\".concat(value,\" \").concat(exchangeRates[selectedCurrencies.firstNum.currency][2],\" on \").concat(value*factor,\" \").concat(exchangeRates[selectedCurrencies.secondNum.currency][2])):setMessage('');}else{setMessage('');setErrorMessage('');}};var handleSecondNumChange=function handleSecondNumChange(value){value=value.replace(/,/g,'.');if(isNaN(value)){setErrorMessage('Syötetty luku ei ole numero');}else if(value!==0){var factor=exchangeRates[selectedCurrencies.firstNum.currency][1]/exchangeRates[selectedCurrencies.secondNum.currency][1];setSelectedCurrencies({firstNum:_objectSpread({},selectedCurrencies.firstNum,{inputValue:value*factor}),secondNum:_objectSpread({},selectedCurrencies.secondNum,{inputValue:value})});value.length>0?setMessage(\"\".concat(value,\" \").concat(exchangeRates[selectedCurrencies.secondNum.currency][2],\" on \").concat(value*factor,\" \").concat(exchangeRates[selectedCurrencies.firstNum.currency][2])):setMessage('');}else{setMessage('');setErrorMessage('');}};var handleFirstCurrencyChange=function handleFirstCurrencyChange(value){var factor=exchangeRates[selectedCurrencies.secondNum.currency][1]/exchangeRates[value][1];setSelectedCurrencies({secondNum:_objectSpread({},selectedCurrencies.secondNum,{inputValue:selectedCurrencies.firstNum.inputValue*factor}),firstNum:_objectSpread({},selectedCurrencies.firstNum,{currency:value})});setMessage(\"\".concat(selectedCurrencies.firstNum.inputValue,\" \").concat(exchangeRates[value][2],\" on \").concat(selectedCurrencies.firstNum.inputValue*factor,\" \").concat(exchangeRates[selectedCurrencies.secondNum.currency][2]));};var handleSecondCurrencyChange=function handleSecondCurrencyChange(value){var factor=exchangeRates[value][1]/exchangeRates[selectedCurrencies.firstNum.currency][1];setSelectedCurrencies({firstNum:_objectSpread({},selectedCurrencies.firstNum),secondNum:_objectSpread({},selectedCurrencies.secondNum,{inputValue:selectedCurrencies.firstNum.inputValue*factor,currency:value})});setMessage(\"\".concat(selectedCurrencies.firstNum.inputValue,\" \").concat(exchangeRates[selectedCurrencies.firstNum.currency][2],\" on \").concat(selectedCurrencies.firstNum.inputValue*factor,\" \").concat(exchangeRates[value][2]));};return React.createElement(\"div\",null,React.createElement(Breadcrumb,null,React.createElement(LinkContainer,{to:\"../\"},React.createElement(Breadcrumb.Item,null,\"Alkuun\")),React.createElement(LinkContainer,{to:\"./\"},React.createElement(Breadcrumb.Item,null,\"Raha\")),React.createElement(Breadcrumb.Item,{active:true},\"Valuuttalaskuri / valuuttamuunnin\")),React.createElement(\"div\",null,React.createElement(\"h2\",null,\"Valuuttalaskuri / valuuttamuunnin\"),React.createElement(\"div\",{className:\"calculator\"},React.createElement(\"p\",null,\"Valuuttalaskurilla voit muuttaa valitun valuutan arvon toiseen valuuttaan.\"),React.createElement(\"p\",null,\"Valitse ensin alkuper\\xE4inen valuutta ja sy\\xF6t\\xE4 vaihdettavan valuutan m\\xE4\\xE4r\\xE4. T\\xE4m\\xE4n j\\xE4lkeen valitse valuutta, johon arvo muutetaan.\",React.createElement(\"br\",null),\"Kun sy\\xF6t\\xE4t uuden arvon jompaan kumpaan kentist\\xE4, toisen valuutan vastaava arvo p\\xE4ivittyy toiseen kentt\\xE4\\xE4n.\"),React.createElement(\"p\",null,\"Valuuttalaskurin kurssit haetaan Euroopan keskuspankin tietokannasta.\"),React.createElement(\"p\",null),React.createElement(\"form\",null,React.createElement(Form.Row,null,React.createElement(InputGroup,{as:Col,md:\"6\"},React.createElement(Form.Control,{value:selectedCurrencies.firstNum.inputValue,onChange:function onChange(_ref){var target=_ref.target;return handleFirstNumChange(target.value);}})),React.createElement(Form.Group,{as:Col,md:\"6\"},React.createElement(Form.Control,{as:\"select\",onChange:function onChange(_ref2){var target=_ref2.target;return handleFirstCurrencyChange(target.value);}},exchangeRates.map(function(x,i){return React.createElement(\"option\",{key:i,value:i},x[0],\" - \",x[2]);})))),React.createElement(Form.Row,null,React.createElement(InputGroup,{as:Col,md:\"6\"},React.createElement(Form.Control,{value:selectedCurrencies.secondNum.inputValue,onChange:function onChange(_ref3){var target=_ref3.target;return handleSecondNumChange(target.value);}})),React.createElement(Form.Group,{as:Col,md:\"6\"},React.createElement(Form.Control,{as:\"select\",onChange:function onChange(_ref4){var target=_ref4.target;return handleSecondCurrencyChange(target.value);}},exchangeRates.map(function(x,i){return React.createElement(\"option\",{key:i,value:i},x[0],\" - \",x[2]);}))))),React.createElement(Notification,{message:message,errorMessage:errorMessage}))),React.createElement(\"h4\",null,\"Valuuttakurssit suhteessa euroon\"),React.createElement(Table,{responsive:\"sm\",size:\"sm\",className:\"table table-bordered table-hover hoverCells\",style:{marginBottom:'50px'}},React.createElement(\"tbody\",null,React.createElement(\"tr\",null,React.createElement(\"th\",{scope:\"row\"},\"Valuutta\"),React.createElement(\"th\",{scope:\"row\"},\"Valuuttakoodi\"),React.createElement(\"th\",{scope:\"row\"},\"EUR\")),exchangeRates.map(function(x,i){return React.createElement(\"tr\",{key:i},React.createElement(\"td\",null,x[2]),React.createElement(\"td\",null,x[0]),React.createElement(\"td\",null,x[1]));}),React.createElement(\"tr\",null,React.createElement(\"td\",{colSpan:\"3\"},React.createElement(\"b\",null,\"Valuttakurssit p\\xE4ivitetty viimeksi \",lastUpdated))))));};export default ExchangeRates;","map":{"version":3,"sources":["/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Finance/ExchangeRates.js"],"names":["React","useState","useEffect","Notification","Breadcrumb","Table","Form","Col","InputGroup","LinkContainer","axios","ExchangeRates","exchangeRates","setExchangeRates","lastUpdated","setLastUpdated","firstNum","inputValue","currency","secondNum","selectedCurrencies","setSelectedCurrencies","message","setMessage","errorMessage","setErrorMessage","getCurrencyFromCode","document","title","get","then","response","data","date","split","reverse","join","arr","Object","entries","rates","i","length","push","sort","a","b","localeCompare","handleFirstNumChange","value","replace","isNaN","factor","handleSecondNumChange","handleFirstCurrencyChange","handleSecondCurrencyChange","target","map","x","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Notification from '../Notification'\nimport { Breadcrumb, Table, Form, Col, InputGroup } from 'react-bootstrap'\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport axios from 'axios';\n\nconst ExchangeRates = () => {\n    const [exchangeRates, setExchangeRates] = useState([])\n    const [lastUpdated, setLastUpdated] = useState('2020-05-11')\n    const [selectedCurrencies, setSelectedCurrencies] = useState({ firstNum: { inputValue: '0', currency: '0' }, secondNum: { inputValue: '0', currency: '0' } })\n    const [message, setMessage] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n\n    const getCurrencyFromCode = (currency) => {\n        switch (currency) {\n            case 'CAD':\n                return 'Kanadan dollari'\n            case 'JPY':\n                return 'Japanin jeni'\n            case 'BGN':\n                return 'Bulgarian leva'\n            case 'CZK':\n                return 'Tšekin koruna'\n            case 'DKK':\n                return 'Tanskan kruunu'\n            case 'GBP':\n                return 'Englannin punta'\n            case 'HUF':\n                return 'Unkarin forintti'\n            case 'PLN':\n                return 'Puolan zloty'\n            case 'RON':\n                return 'Romanian leu'\n            case 'SEK':\n                return 'Ruotsin kruunu'\n            case 'CHF':\n                return 'Sveitsin frangi'\n            case 'NOK':\n                return 'Norjan kruunu'\n            case 'HRK':\n                return 'Kroatian kuna'\n            case 'RUB':\n                return 'Venäjän rupla'\n            case 'TRY':\n                return 'Turkin liira'\n            case 'AUD':\n                return 'Australian dollari'\n            case 'BRL':\n                return 'Brasilian real'\n            case 'CNY':\n                return 'Kiinan juan / renminbi'\n            case 'HKD':\n                return 'Hongkongin dollari'\n            case 'IDR':\n                return 'Indonesian rupia'\n            case 'ILS':\n                return 'Israelin sekeli'\n            case 'INR':\n                return 'Intian rupia'\n            case 'KRW':\n                return 'Etelä-Korean won'\n            case 'MYR':\n                return 'Malesian ringgit'\n            case 'NZD':\n                return 'Uuden-Seelannin dollari'\n            case 'PHP':\n                return 'Filippiinien peso'\n            case 'SGD':\n                return 'Singaporen dollari'\n            case 'THB':\n                return 'Thaimaan baht'\n            case 'ZAR':\n                return 'Etelä-Afrikan randi'\n            case 'USD':\n                return 'Yhdysvaltain dollari'\n            case 'ISK':\n                return 'Islannin kruunu'\n            case 'MXN':\n                return 'Meksikon peso'\n            default:\n                return 'Valuutan nimi'\n        }\n    }\n\n    useEffect(() => {\n        document.title = 'Valuuttalaskuri / valuuttamuunnin - Laske & Muunna'\n        axios\n            .get('https://api.exchangeratesapi.io/latest')\n            .then(response => {\n                const lastUpdated = response.data.date.split('-').reverse().join('.')\n                setLastUpdated(lastUpdated)\n                let arr = Object.entries(response.data.rates)\n                for (let i = 0; i < arr.length; i++) {\n                    arr[i].push(getCurrencyFromCode(arr[i][0]))\n                }\n                arr.push([\"EUR\", 1, \"Euro\"])\n                arr.sort((a, b) => a[2].localeCompare(b[2]))\n                setExchangeRates(arr)\n            })\n    }, [])\n\n    const handleFirstNumChange = (value) => {\n        value = value.replace(/,/g, '.')\n        if (isNaN(value)) {\n            setErrorMessage('Syötetty luku ei ole numero')\n        } else if (value !== 0) {\n            const factor = exchangeRates[selectedCurrencies.secondNum.currency][1] / exchangeRates[selectedCurrencies.firstNum.currency][1]\n            setSelectedCurrencies({ secondNum: { ...selectedCurrencies.secondNum, inputValue: value * factor }, firstNum: { ...selectedCurrencies.firstNum, inputValue: value } })\n            value.length > 0 ? setMessage(`${value} ${exchangeRates[selectedCurrencies.firstNum.currency][2]} on ${value * factor} ${exchangeRates[selectedCurrencies.secondNum.currency][2]}`) : setMessage('')\n        } else {\n            setMessage('')\n            setErrorMessage('')\n        }\n    }\n\n    const handleSecondNumChange = (value) => {\n        value = value.replace(/,/g, '.')\n        if (isNaN(value)) {\n            setErrorMessage('Syötetty luku ei ole numero')\n        } else if (value !== 0) {\n            const factor = exchangeRates[selectedCurrencies.firstNum.currency][1] / exchangeRates[selectedCurrencies.secondNum.currency][1]\n            setSelectedCurrencies({ firstNum: { ...selectedCurrencies.firstNum, inputValue: value * factor }, secondNum: { ...selectedCurrencies.secondNum, inputValue: value } })\n            value.length > 0 ? setMessage(`${value} ${exchangeRates[selectedCurrencies.secondNum.currency][2]} on ${value * factor} ${exchangeRates[selectedCurrencies.firstNum.currency][2]}`) : setMessage('')\n        } else {\n            setMessage('')\n            setErrorMessage('')\n        }\n    }\n\n    const handleFirstCurrencyChange = (value) => {\n        const factor = exchangeRates[selectedCurrencies.secondNum.currency][1] / exchangeRates[value][1]\n        setSelectedCurrencies({ secondNum: { ...selectedCurrencies.secondNum, inputValue: selectedCurrencies.firstNum.inputValue * factor }, firstNum: { ...selectedCurrencies.firstNum, currency: value } })\n        setMessage(`${selectedCurrencies.firstNum.inputValue} ${exchangeRates[value][2]} on ${selectedCurrencies.firstNum.inputValue * factor} ${exchangeRates[selectedCurrencies.secondNum.currency][2]}`)\n    }\n\n    const handleSecondCurrencyChange = (value) => {\n        const factor = exchangeRates[value][1] / exchangeRates[selectedCurrencies.firstNum.currency][1]\n        setSelectedCurrencies({ firstNum: { ...selectedCurrencies.firstNum }, secondNum: { ...selectedCurrencies.secondNum, inputValue: selectedCurrencies.firstNum.inputValue * factor, currency: value } })\n        setMessage(`${selectedCurrencies.firstNum.inputValue} ${exchangeRates[selectedCurrencies.firstNum.currency][2]} on ${selectedCurrencies.firstNum.inputValue * factor} ${exchangeRates[value][2]}`)\n    }\n\n    return (\n        <div>\n            <Breadcrumb>\n                <LinkContainer to=\"../\">\n                    <Breadcrumb.Item>\n                        Alkuun\n                </Breadcrumb.Item>\n                </LinkContainer>\n                <LinkContainer to=\"./\">\n                    <Breadcrumb.Item>\n                        Raha\n                </Breadcrumb.Item>\n                </LinkContainer>\n                <Breadcrumb.Item active>\n                    Valuuttalaskuri / valuuttamuunnin\n                    </Breadcrumb.Item>\n            </Breadcrumb>\n            <div>\n                <h2>\n                    Valuuttalaskuri / valuuttamuunnin\n                </h2>\n                <div className=\"calculator\">\n                    <p>Valuuttalaskurilla voit muuttaa valitun valuutan arvon toiseen valuuttaan.</p>\n                    <p>Valitse ensin alkuperäinen valuutta ja syötä vaihdettavan valuutan määrä. Tämän jälkeen valitse valuutta, johon arvo muutetaan.\n                        <br />\n                        Kun syötät uuden arvon jompaan kumpaan kentistä, toisen valuutan vastaava arvo päivittyy toiseen kenttään.\n                    </p>\n                    <p>Valuuttalaskurin kurssit haetaan Euroopan keskuspankin tietokannasta.</p>\n                    <p>\n                    </p>\n                    <form>\n                        <Form.Row>\n                            <InputGroup as={Col} md=\"6\">\n                                <Form.Control\n                                    value={selectedCurrencies.firstNum.inputValue}\n                                    onChange={({ target }) => handleFirstNumChange(target.value)} />\n                            </InputGroup>\n                            <Form.Group as={Col} md=\"6\">\n                                <Form.Control as=\"select\"\n                                    onChange={({ target }) => handleFirstCurrencyChange(target.value)}\n                                >\n                                    {exchangeRates.map((x, i) => <option key={i} value={i}>{x[0]} - {x[2]}</option>)}\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <InputGroup as={Col} md=\"6\">\n                                <Form.Control\n                                    value={selectedCurrencies.secondNum.inputValue}\n                                    onChange={({ target }) => handleSecondNumChange(target.value)}\n                                />\n                            </InputGroup>\n                            <Form.Group as={Col} md=\"6\">\n                                <Form.Control as=\"select\"\n                                    onChange={({ target }) => handleSecondCurrencyChange(target.value)}\n                                >\n                                    {exchangeRates.map((x, i) => <option key={i} value={i}>{x[0]} - {x[2]}</option>)}\n                                </Form.Control>\n                            </Form.Group>\n                        </Form.Row>\n                    </form>\n                    <Notification message={message} errorMessage={errorMessage} />\n                </div>\n            </div>\n            <h4>Valuuttakurssit suhteessa euroon</h4>\n            <Table responsive='sm' size='sm' className='table table-bordered table-hover hoverCells' style={{ marginBottom: '50px' }}>\n                <tbody>\n                    <tr>\n                        <th scope=\"row\">Valuutta</th>\n                        <th scope=\"row\">Valuuttakoodi</th>\n                        <th scope=\"row\">EUR</th>\n                    </tr>\n                    {exchangeRates.map((x, i) => <tr key={i}><td>{x[2]}</td><td>{x[0]}</td><td>{x[1]}</td></tr>)}\n                    <tr>\n                        <td colSpan='3'>\n                            <b>Valuttakurssit päivitetty viimeksi {lastUpdated}</b>\n                        </td>\n                    </tr>\n                </tbody>\n            </Table>\n        </div>\n    )\n}\nexport default ExchangeRates"]},"metadata":{},"sourceType":"module"}