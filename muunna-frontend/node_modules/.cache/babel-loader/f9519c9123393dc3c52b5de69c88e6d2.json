{"ast":null,"code":"var _jsxFileName = \"/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Conversion/DecToBinCon.js\";\nimport React, { useState, useEffect } from 'react';\nimport Notification from '../Notification';\nimport { Breadcrumb } from 'react-bootstrap';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport desimaalijarjestelma from '../../desimaali.png';\nimport binaarijarjestelma from '../../binaarijarjestelma.png';\nimport binaarilukutaulukko from '../../binaarilukutaulukko.png';\n\nconst DecToBinCon = () => {\n  const [decimal, setDecimal] = useState('10');\n  const [binary, setBinary] = useState('');\n  const [message, setMessage] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    handleChange(decimal);\n    document.title = 'Desimaali-binäärilukumuunnin - Laske & Muunna';\n  });\n\n  const handleChange = value => {\n    setDecimal(value);\n    setBinary(convertDectoBin(decimal));\n\n    if (isNaN(value)) {\n      setErrorMessage('Syötetty luku ei ole numero');\n    } else if (value.length !== 0) {\n      setMessage(`${decimal} on binäärilukuna ${binary}`);\n    } else {\n      setMessage('');\n      setErrorMessage('');\n    }\n  };\n\n  const convertDectoBin = dec => {\n    if (dec < 0) {\n      dec = 0xFFFFFFFF + dec + 1;\n    }\n\n    return parseInt(dec, 10).toString(2);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(LinkContainer, {\n    to: \"../\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Alkuun\")), React.createElement(LinkContainer, {\n    to: \"./\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Yksikk\\xF6muuntimet\")), React.createElement(Breadcrumb.Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Desimaaliluku-bin\\xE4\\xE4rilukumuunnin\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Desimaali-bin\\xE4\\xE4rilukumuunnin\"), React.createElement(\"div\", {\n    className: \"calculator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"T\\xE4ll\\xE4 muuntimella voit muuttaa niin sanotun normaalin luvun, eli desimaaliluvun bin\\xE4\\xE4riluvuksi. Sy\\xF6t\\xE4 desimaaliluku muuntimeen, niin muunnin n\\xE4ytt\\xE4\\xE4 luvun bin\\xE4\\xE4rilukuna.\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Sy\\xF6t\\xE4 luku: \", React.createElement(\"input\", {\n    value: decimal,\n    onChange: ({\n      target\n    }) => handleChange(target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(Notification, {\n    message: message,\n    result: binary,\n    errorMessage: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Katso my\\xF6s \", React.createElement(Link, {\n    to: \"./binaari-desimaali-muunnin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"bin\\xE4\\xE4ri-desimaalilukumuunnin\"), \".\"))), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Desimaalij\\xE4rjestelm\\xE4\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Normaalisti k\\xE4yt\\xE4mme arkiel\\xE4m\\xE4ss\\xE4 normaalia 10-numeroista lukuj\\xE4rjestelm\\xE4\\xE4 (luvut 0-9), eli desimaalij\\xE4rjestelm\\xE4\\xE4.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), \" Numeron paikka luvussa on merkitsev\\xE4 ja kullakin numerolla on erilainen painoarvo sen mukaan, mik\\xE4 on numeron sijainti luvussa. Numeroiden painoarvot kasvavat oikealta vasemmalle: 1, 10, 100, 1000, 10000... \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \"10 numeroj\\xE4rjestelm\\xE4ss\\xE4 kantaluku on 10 ja numeroiden painoarvot saadaan kantaluvun potensseista: \", React.createElement(\"var\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"1=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"0\"), \", 10=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"1\"), \", 100=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"2\"), \", 1 000=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"3\"), \", 10 000=10\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"4\")), React.createElement(\"img\", {\n    src: desimaalijarjestelma,\n    alt: \"Desimaaliluku\",\n    style: {\n      maxWidth: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Bin\\xE4\\xE4rij\\xE4rjestelm\\xE4\"), \"Bin\\xE4\\xE4rij\\xE4rjestelm\\xE4 on teknisesti yksinkertaisin lukuj\\xE4rjestelm\\xE4. Bin\\xE4\\xE4rij\\xE4rjestelm\\xE4 on kaksij\\xE4rjestelm\\xE4, jossa tarvitaan vain kahta numeroa: 0 ja 1.\", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: binaarilukutaulukko,\n    alt: \"Bin\\xE4\\xE4rilukutaulukko\",\n    style: {\n      maxWidth: '100%',\n      float: 'right',\n      margin: '20px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), \"Tietokoneiden on vaikeaa k\\xE4ytt\\xE4\\xE4 10-numeroj\\xE4rjestelm\\xE4\\xE4 merkkim\\xE4\\xE4r\\xE4n vuoksi, joten tietokoneiden toiminta perustuukin yksinkertaisempaan bin\\xE4\\xE4rij\\xE4rjestelm\\xE4\\xE4n. Bin\\xE4\\xE4riluvuilla on helppo esitt\\xE4\\xE4 erilaisia ilmi\\xF6it\\xE4, kuten: s\\xE4hk\\xF6 kulkee / ei kulje, ovi on auki / kiinni, toimii / ei toimi ja niin edelleen.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), \"Bin\\xE4\\xE4rilukuj\\xE4rjestelm\\xE4ss\\xE4 lukujen painoarvot saadaan kantaluvun (2) potensseina, samalla tavalla kuin 10-j\\xE4rjestelm\\xE4ss\\xE4.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"var\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"1=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"0\"), \", 2=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"1\"), \", 4=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"2\"), \", 8=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"3\"), \", 16=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"4\"), \", 32=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"5\"), \", 64=2\", React.createElement(\"sup\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"6\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), \"Lukujen painoarvot kasvaa oikealta vasemmalle: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512 jne.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \"Yll\\xE4 luetellut luvut saattaa n\\xE4ytt\\xE4\\xE4 hyvin tutuilta, koska ne tulevat jatkuvasti vastaan tietotekniikassa.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), \"Bin\\xE4\\xE4riluku saadaan kerrottua helposti kahdella lis\\xE4\\xE4m\\xE4ll\\xE4 0 luvun per\\xE4\\xE4n, eli esimerkiksi 1010B on desimaalilukuna 10 ja 10100B on desimaalilukuna 20.\", React.createElement(\"img\", {\n    src: binaarijarjestelma,\n    alt: \"Bin\\xE4\\xE4rilukuj\\xE4rjestelm\\xE4\",\n    style: {\n      maxWidth: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })));\n};\n\nexport default DecToBinCon;","map":{"version":3,"sources":["/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Conversion/DecToBinCon.js"],"names":["React","useState","useEffect","Notification","Breadcrumb","LinkContainer","Link","desimaalijarjestelma","binaarijarjestelma","binaarilukutaulukko","DecToBinCon","decimal","setDecimal","binary","setBinary","message","setMessage","errorMessage","setErrorMessage","handleChange","document","title","value","convertDectoBin","isNaN","length","dec","parseInt","toString","target","maxWidth","float","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Notification from '../Notification'\nimport { Breadcrumb } from 'react-bootstrap'\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport desimaalijarjestelma from '../../desimaali.png'\nimport binaarijarjestelma from '../../binaarijarjestelma.png'\nimport binaarilukutaulukko from '../../binaarilukutaulukko.png'\n\nconst DecToBinCon = () => {\n    const [decimal, setDecimal] = useState('10')\n    const [binary, setBinary] = useState('')\n    const [message, setMessage] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        handleChange(decimal)\n        document.title = 'Desimaali-binäärilukumuunnin - Laske & Muunna'\n    })\n\n    const handleChange = (value) => {\n        setDecimal(value)\n        setBinary(convertDectoBin(decimal))\n        if (isNaN(value)) {\n            setErrorMessage('Syötetty luku ei ole numero')\n        } else if (value.length !== 0) {\n            setMessage(`${decimal} on binäärilukuna ${binary}`)\n        } else {\n            setMessage('')\n            setErrorMessage('')\n        }\n    }\n\n    const convertDectoBin = (dec) => {\n        if (dec < 0) {\n            dec = 0xFFFFFFFF + dec + 1\n        }\n        return parseInt(dec, 10).toString(2);\n    }\n\n    return (\n        <div>\n            <Breadcrumb>\n                <LinkContainer to=\"../\">\n                    <Breadcrumb.Item>\n                        Alkuun\n                </Breadcrumb.Item>\n                </LinkContainer>\n                <LinkContainer to=\"./\">\n                    <Breadcrumb.Item>\n                        Yksikkömuuntimet\n                </Breadcrumb.Item>\n                </LinkContainer>\n                <Breadcrumb.Item active>\n                    Desimaaliluku-binäärilukumuunnin\n                </Breadcrumb.Item>\n            </Breadcrumb>\n            <div>\n                <h2>\n                    Desimaali-binäärilukumuunnin\n            </h2>\n                <div className=\"calculator\">\n                    <p>Tällä muuntimella voit muuttaa niin sanotun normaalin luvun, eli desimaaliluvun binääriluvuksi. Syötä desimaaliluku muuntimeen, niin muunnin näyttää luvun binäärilukuna.</p>\n                    <form>\n                        <p>\n                            Syötä luku: <input value={decimal} onChange={({ target }) => handleChange(target.value)}>\n                            </input>\n                        </p>\n                    </form>\n                    <Notification message={message} result={binary} errorMessage={errorMessage} />\n                    <p>Katso myös <Link to=\"./binaari-desimaali-muunnin\">binääri-desimaalilukumuunnin</Link>.</p>\n                </div>\n            </div>\n            <hr />\n            <h4>Desimaalijärjestelmä</h4>\n            <p>Normaalisti käytämme arkielämässä normaalia 10-numeroista lukujärjestelmää (luvut 0-9), eli desimaalijärjestelmää.<br /> Numeron paikka luvussa on merkitsevä ja kullakin numerolla on erilainen painoarvo sen mukaan, mikä on numeron sijainti\n            luvussa. Numeroiden painoarvot kasvavat oikealta vasemmalle: 1, 10, 100, 1000, 10000... <br />10 numerojärjestelmässä kantaluku on 10 ja numeroiden painoarvot saadaan kantaluvun potensseista: <var>1=10<sup>0</sup>, 10=10<sup>1</sup>, 100=10<sup>2</sup>, 1 000=10<sup>3</sup>, 10 000=10<sup>4</sup></var>\n                <img src={desimaalijarjestelma} alt='Desimaaliluku' style={{ maxWidth: '100%' }} />\n            </p>\n            <h4>Binäärijärjestelmä</h4>\n            Binäärijärjestelmä on teknisesti yksinkertaisin lukujärjestelmä. Binäärijärjestelmä on kaksijärjestelmä, jossa tarvitaan vain kahta numeroa: 0 ja 1.\n            <p>\n                <img src={binaarilukutaulukko} alt='Binäärilukutaulukko' style={{ maxWidth: '100%', float: 'right', margin: '20px' }} />\n                <br />\n            Tietokoneiden on vaikeaa käyttää 10-numerojärjestelmää merkkimäärän vuoksi, joten tietokoneiden toiminta perustuukin yksinkertaisempaan binäärijärjestelmään. Binääriluvuilla on helppo esittää erilaisia ilmiöitä, kuten: sähkö kulkee / ei kulje, ovi on auki / kiinni, toimii / ei toimi ja niin edelleen.\n            <br />\n            Binäärilukujärjestelmässä lukujen painoarvot saadaan kantaluvun (2) potensseina, samalla tavalla kuin 10-järjestelmässä.<br />\n                <var>1=2<sup>0</sup>, 2=2<sup>1</sup>, 4=2<sup>2</sup>, 8=2<sup>3</sup>, 16=2<sup>4</sup>, 32=2<sup>5</sup>, 64=2<sup>6</sup></var><br />\n            Lukujen painoarvot kasvaa oikealta vasemmalle: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512 jne.<br />\n            Yllä luetellut luvut saattaa näyttää hyvin tutuilta, koska ne tulevat jatkuvasti vastaan tietotekniikassa.\n            <br />\n            Binääriluku saadaan kerrottua helposti kahdella lisäämällä 0 luvun perään, eli esimerkiksi 1010B on desimaalilukuna 10 ja 10100B on desimaalilukuna 20.\n            <img src={binaarijarjestelma} alt='Binäärilukujärjestelmä' style={{ maxWidth: '100%' }} />\n                <br />\n\n            </p>\n        </div>\n    )\n}\nexport default DecToBinCon"]},"metadata":{},"sourceType":"module"}