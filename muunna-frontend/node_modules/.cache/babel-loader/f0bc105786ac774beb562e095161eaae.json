{"ast":null,"code":"var _jsxFileName = \"/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Conversion/LengthCon.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Breadcrumb, InputGroup, FormControl } from 'react-bootstrap';\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Notification from '../Notification';\n\nconst LengthCon = () => {\n  const [values, setValues] = useState({\n    millimeter: 10,\n    centimeter: 1,\n    inch: 0.393700787,\n    meter: 0.01,\n    kilometer: 0.00001,\n    message: '',\n    errorMessage: ''\n  });\n  useEffect(() => {\n    document.title = 'Pituusmuunnin / etÃ¤isyysmuunnin - Laske & Muunna';\n  });\n\n  const handleChange = obj => {\n    obj.value = obj.value.toString().replace(/,/g, '.');\n\n    switch (obj.unit) {\n      case 'mm':\n        isNaN(obj.value) ? setValues({ ...values,\n          millimeter: obj.value,\n          centimeter: 0,\n          inch: 0,\n          kilometer: 0,\n          meter: 0,\n          errorMessage: 'Virheellinen luku'\n        }) : setValues({ ...values,\n          millimeter: obj.value,\n          centimeter: obj.value / 10,\n          inch: obj.value * 0.0393700787,\n          kilometer: obj.value / 1000000,\n          meter: obj.value / 1000,\n          errorMessage: ''\n        });\n        break;\n\n      case 'cm':\n        isNaN(obj.value) ? setValues({ ...values,\n          centimeter: obj.value,\n          inch: 0,\n          kilometer: 0,\n          meter: 0,\n          millimeter: 0,\n          errorMessage: 'Virheellinen luku'\n        }) : setValues({ ...values,\n          millimeter: obj.value * 10,\n          centimeter: obj.value,\n          inch: obj.value * 0.393700787,\n          kilometer: obj.value / 100000,\n          meter: obj.value / 100,\n          errorMessage: ''\n        });\n        break;\n\n      case 'm':\n        isNaN(obj.value) ? setValues({ ...values,\n          meter: obj.value,\n          inch: 0,\n          kilometer: 0,\n          millimeter: 0,\n          centimeter: 0,\n          errorMessage: 'Virheellinen luku'\n        }) : setValues({ ...values,\n          meter: obj.value,\n          millimeter: obj.value * 1000,\n          centimeter: obj.value * 100,\n          inch: obj.value * 100 * 0.393700787,\n          kilometer: obj.value / 1000,\n          errorMessage: ''\n        });\n        break;\n\n      case 'km':\n        isNaN(obj.value) ? setValues({ ...values,\n          kilometer: obj.value,\n          inch: 0,\n          meter: 0,\n          millimeter: 0,\n          centimeter: 0,\n          errorMessage: 'Virheellinen luku'\n        }) : setValues({ ...values,\n          kilometer: obj.value,\n          centimeter: obj.value * 100000,\n          inch: obj.value * 100000 * 0.393700787,\n          meter: obj.value * 1000,\n          millimeter: obj.value * 1000000,\n          errorMessage: ''\n        });\n        break;\n\n      case 'inch':\n        isNaN(obj.value) ? setValues({ ...values,\n          inch: obj.value,\n          meter: 0,\n          millimeter: 0,\n          centimeter: 0,\n          kilometer: 0,\n          errorMessage: 'Virheellinen luku'\n        }) : setValues({ ...values,\n          inch: obj.value,\n          centimeter: obj.value * 2.54,\n          meter: obj.value * 2.54 / 100,\n          kilometer: obj.value * 2.54 / 100000,\n          millimeter: obj.value * 25.4,\n          errorMessage: ''\n        });\n        break;\n\n      default:\n        setValues({\n          millimeter: 10,\n          centimeter: 1,\n          inch: 0.393700787,\n          meter: 0.01,\n          kilometer: 0.00001,\n          message: '',\n          errorMessage: ''\n        });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Breadcrumb, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(LinkContainer, {\n    to: \"../\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Alkuun\")), React.createElement(LinkContainer, {\n    to: \"./\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Breadcrumb.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Yksikk\\xF6muuntimet\")), React.createElement(Breadcrumb.Item, {\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Pituusmuunnin / et\\xE4isyysmuunnin\")), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Pituusmuunnin / et\\xE4isyysmuunnin\"), React.createElement(\"div\", {\n    className: \"calculator\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Sy\\xF6t\\xE4 arvo johonkin alla olevan laskurin kentist\\xE4. Laskuri n\\xE4ytt\\xE4\\xE4 muiden yksik\\xF6iden muunnetut arvot. Voit muuntaa muuntimella esimerkiksi senttimetrit tuumiksi, millimetrit kilometreiksi tai toisinp\\xE4in.\"), React.createElement(Notification, {\n    message: values.message,\n    errorMessage: values.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Millimetri:\")), React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    onChange: ({\n      target\n    }) => handleChange({\n      unit: 'mm',\n      value: target.value\n    }),\n    value: values.millimeter || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"mm\"))), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Senttimetri:\")), React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    onChange: ({\n      target\n    }) => handleChange({\n      unit: 'cm',\n      value: target.value\n    }),\n    value: values.centimeter || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"cm\"))), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Metri:\")), React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    onChange: ({\n      target\n    }) => handleChange({\n      unit: 'm',\n      value: target.value\n    }),\n    value: values.meter || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"m\"))), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Kilometri:\")), React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    onChange: ({\n      target\n    }) => handleChange({\n      unit: 'km',\n      value: target.value\n    }),\n    value: values.kilometer || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"km\"))), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Tuuma:\")), React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    onChange: ({\n      target\n    }) => handleChange({\n      unit: 'inch',\n      value: target.value\n    }),\n    value: values.inch || '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(InputGroup.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"tuuma\"))), React.createElement(Notification, {\n    message: values.message,\n    errorMessage: values.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })));\n};\n\nexport default LengthCon;","map":{"version":3,"sources":["/Users/joonaskinnunen/Koodit/Lukumuuntimet/muunna-frontend/src/components/Conversion/LengthCon.js"],"names":["React","useState","useEffect","Breadcrumb","InputGroup","FormControl","LinkContainer","Notification","LengthCon","values","setValues","millimeter","centimeter","inch","meter","kilometer","message","errorMessage","document","title","handleChange","obj","value","toString","replace","unit","isNaN","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Breadcrumb, InputGroup, FormControl } from 'react-bootstrap'\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport Notification from '../Notification'\n\nconst LengthCon = () => {\n    const [values, setValues] = useState({ millimeter: 10, centimeter: 1, inch: 0.393700787, meter: 0.01, kilometer: 0.00001, message: '', errorMessage: '' })\n\n    useEffect(() => {\n        document.title = 'Pituusmuunnin / etÃ¤isyysmuunnin - Laske & Muunna'\n    })\n\n    const handleChange = (obj) => {\n        obj.value = obj.value.toString().replace(/,/g, '.')\n        switch (obj.unit) {\n            case 'mm': isNaN(obj.value) ? setValues({ ...values, millimeter: obj.value, centimeter: 0, inch: 0, kilometer: 0, meter: 0, errorMessage: 'Virheellinen luku' }) : setValues({ ...values, millimeter: obj.value, centimeter: obj.value / 10, inch: obj.value * 0.0393700787, kilometer: obj.value / 1000000, meter: obj.value / 1000, errorMessage: '' })\n                break\n            case 'cm': isNaN(obj.value) ? setValues({ ...values, centimeter: obj.value, inch: 0, kilometer: 0, meter: 0, millimeter: 0, errorMessage: 'Virheellinen luku' }) : setValues({ ...values, millimeter: obj.value * 10, centimeter: obj.value, inch: obj.value * 0.393700787, kilometer: obj.value / 100000, meter: obj.value / 100, errorMessage: '' })\n                break\n            case 'm': isNaN(obj.value) ? setValues({ ...values, meter: obj.value, inch: 0, kilometer: 0, millimeter: 0, centimeter: 0, errorMessage: 'Virheellinen luku' }) : setValues({ ...values, meter: obj.value, millimeter: obj.value * 1000, centimeter: obj.value * 100, inch: obj.value * 100 * 0.393700787, kilometer: obj.value / 1000, errorMessage: '' })\n                break\n            case 'km': isNaN(obj.value) ? setValues({ ...values, kilometer: obj.value, inch: 0, meter: 0, millimeter: 0, centimeter: 0, errorMessage: 'Virheellinen luku' }) : setValues({ ...values, kilometer: obj.value, centimeter: obj.value * 100000, inch: obj.value * 100000 * 0.393700787, meter: obj.value * 1000, millimeter: obj.value * 1000000, errorMessage: '' })\n                break\n            case 'inch': isNaN(obj.value) ? setValues({ ...values, inch: obj.value, meter: 0, millimeter: 0, centimeter: 0, kilometer: 0, errorMessage: 'Virheellinen luku' }) : setValues({ ...values, inch: obj.value, centimeter: obj.value * 2.54, meter: obj.value * 2.54 / 100, kilometer: obj.value * 2.54 / 100000, millimeter: obj.value * 25.4, errorMessage: '' })\n                break\n            default: setValues({ millimeter: 10, centimeter: 1, inch: 0.393700787, meter: 0.01, kilometer: 0.00001, message: '', errorMessage: '' })\n\n        }\n    }\n\n    return (\n        <div>\n            <Breadcrumb>\n                <LinkContainer to=\"../\">\n                    <Breadcrumb.Item>\n                        Alkuun\n                    </Breadcrumb.Item>\n                </LinkContainer>\n                <LinkContainer to=\"./\">\n                    <Breadcrumb.Item>\n                        YksikkÃ¶muuntimet\n                    </Breadcrumb.Item>\n                </LinkContainer>\n                <Breadcrumb.Item active>\n                    Pituusmuunnin / etÃ¤isyysmuunnin\n                </Breadcrumb.Item>\n            </Breadcrumb>\n            <h2>\n                Pituusmuunnin / etÃ¤isyysmuunnin\n            </h2>\n            <div className=\"calculator\">\n                <p>\n                    SyÃ¶tÃ¤ arvo johonkin alla olevan laskurin kentistÃ¤. Laskuri nÃ¤yttÃ¤Ã¤ muiden yksikÃ¶iden muunnetut arvot. Voit muuntaa muuntimella esimerkiksi senttimetrit tuumiksi, millimetrit kilometreiksi tai toisinpÃ¤in.\n            </p>\n                <Notification message={values.message} errorMessage={values.errorMessage} />\n                <label><b>Millimetri:</b></label>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        onChange={({ target }) => handleChange({ unit: 'mm', value: target.value })}\n                        value={values.millimeter || ''}\n                    />\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>mm</InputGroup.Text>\n                    </InputGroup.Prepend>\n                </InputGroup>\n                <label><b>Senttimetri:</b></label>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        onChange={({ target }) => handleChange({ unit: 'cm', value: target.value })}\n                        value={values.centimeter || ''}\n                    />\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>cm</InputGroup.Text>\n                    </InputGroup.Prepend>\n                </InputGroup>\n                <label><b>Metri:</b></label>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        onChange={({ target }) => handleChange({ unit: 'm', value: target.value })}\n                        value={values.meter || ''}\n                    />\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>m</InputGroup.Text>\n                    </InputGroup.Prepend>\n                </InputGroup>\n                <label><b>Kilometri:</b></label>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        onChange={({ target }) => handleChange({ unit: 'km', value: target.value })}\n                        value={values.kilometer || ''}\n                    />\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>km</InputGroup.Text>\n                    </InputGroup.Prepend>\n                </InputGroup>\n                <label><b>Tuuma:</b></label>\n                <InputGroup className=\"mb-3\">\n                    <FormControl\n                        onChange={({ target }) => handleChange({ unit: 'inch', value: target.value })}\n                        value={values.inch || ''}\n                    />\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>tuuma</InputGroup.Text>\n                    </InputGroup.Prepend>\n                </InputGroup>\n                <Notification message={values.message} errorMessage={values.errorMessage} />\n            </div>\n        </div>\n    )\n}\n\nexport default LengthCon"]},"metadata":{},"sourceType":"module"}